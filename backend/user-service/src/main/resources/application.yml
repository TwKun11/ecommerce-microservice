server:
  port: 8083

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:postgresql://localhost:5432/userdb
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8085/realms/user-service
      client:
        registration:
          keycloak:
            client-id: user-service
            client-secret: ${KEYCLOAK_CLIENT_SECRET:jKnRXsq3dK22QsIp8FjrGLHXL3IzRjLL}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,profile,email
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            issuer-uri: http://localhost:8085/realms/user-service
            user-name-attribute: preferred_username
          google:
            issuer-uri: https://accounts.google.com
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Big Tech Cookie Configuration (for Keycloak integration)
app:
  security:
    refresh-token:
      expiration: 2592000 # 30 days
    cookie:
      domain: localhost
      secure: false # Set to true for HTTPS production

# Keycloak Configuration for Authorization Code Flow
keycloak:
  auth-server-url: http://localhost:8085
  realm: user-service
  resource: user-service
  credentials:
    secret: jKnRXsq3dK22QsIp8FjrGLHXL3IzRjLL
  public-client: false
  confidential-port: 0
  principal-attribute: preferred_username
  ssl-required: external
  use-resource-role-mappings: true
  bearer-only: false
  verify-token-audience: true
  token-minimum-time-to-live: 0
  token-time-to-live: 900 # 15 minutes
  token-time-to-live-if-remember-me: 86400 # 24 hours
  refresh-token-time-to-live: 2592000 # 30 days
  refresh-token-time-to-live-if-remember-me: 2592000 # 30 days

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
